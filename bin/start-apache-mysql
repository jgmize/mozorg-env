#!/bin/bash -ex
trap "trap - SIGTERM && kill -- -$$" SIGINT SIGTERM EXIT
BIN=${0%/*}
HTTPDCONF=$BIN/../apache/etc/httpd/conf
PROJECT=mozorg
BEDROCK_PATH=/data/www/www.mozilla.org-django/bedrock

if [ -e $BIN/../.env ]; then
    . $BIN/../.env
fi

. $BIN/bedrock-init
. $BIN/mozcom-init
. $BIN/b2d

if [ $B2D ]; then
    $BIN/b2d-fswatch-rsync $BEDROCK &
    $BIN/b2d-fswatch-rsync $MOZCOM &
fi

if [ ! "$(docker images | grep ${PROJECT}_apache)" ]; then
   if [ ! -d $BIN/../apache/rpm ]; then
      cd $BIN/../apache
      curl -sS https://people.mozilla.org/~jmize/bedrock-apache-rpms.tgz | tar xz
   fi
   # TODO: file PR to add httpd conf files to bedrock
   if [ ! -e $BEDROCK/etc/httpd/httpd.conf ]; then
      cp $HTTPDCONF/httpd.conf $BEDROCK/etc/httpd/httpd.conf
   fi
   if [ ! -e $BEDROCK/etc/httpd/www.mozilla.org.conf ]; then
       cp $HTTPDCONF.d/www.mozilla.org.conf $BEDROCK/etc/httpd/www.mozilla.org.conf
   fi
   $BIN/compose build apache
fi

if [ ! "$(docker images | grep mysql)" ]; then
   $BIN/compose pull mysql
fi

$BIN/compose up mysql apache &
sleep 10 #TODO: something more deterministic

docker exec ${PROJECT}_mysql_1 bash -c 'echo "create database if not exists bedrock;" | mysql --password=$MYSQL_ROOT_PASSWORD'

docker exec ${PROJECT}_apache_1 bash -c "cd $BEDROCK_PATH; if [ ! -e .synced ]; then bin/sync_all && touch .synced; fi"
echo Ctrl+C to exit
cat # wait until killed
